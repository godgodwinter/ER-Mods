# Global mod engine configuration
[modengine]
# If set to true the debug console will appear while the game is running
debug = false

# List of files that will be loaded into the game as DLL mods.
# Absolute paths to mods are supported but must use '\\' to separate path items. For example, if your mod is at E:\coolstuff\coolmod.dll, you must enter
# the path in the config as "E:\\coolstuff\\coolmod.dll".
# If there's no drive specifier (C:, D:, etc), the path is relative to where the launcher is located. For example, having the path as "mod.dll" will tell
# Mod Engine 2 to look for the directory mod inside the Mod Engine 2 directory with the launcher.
#
# Multiple mods must be separated with commas. For example if you have 3 mods, you will have something like the following:
# external_dlls = [ "coolmod.dll", "D:\\nicemods\\nicemod.dll", "sosofolder\sosomod.dll" ]
    external_dlls = [
        "SeamlessCoop/ersc.dll",
        "dll\\ertransmogrify.dll",
        "dll\\ermerchant.dll",
        "dll\\NoStatsRequirement.dll",
    ]

# Mod loader configuration
[extension.mod_loader]
enabled = true

# Not currently supported for Elden Ring
loose_params = false

# List of directories that contain modded files in order of prioritization. Inside each specified mod directory must have the game
# assets in Fromsoft's asset structure. I.e. if you mod parts/something.partsbnd.dcx, the modded version must be at mod/parts/something.partsbnd.dcx.
# Absolute paths to mods are supported but must use '\\' to separate path items. For example, if your mod is at E:\coolstuff\coolmod, you must enter
# the path in the config as "E:\\coolstuff\\coolmod".
# If there's no drive specifier (C:, D:, etc), the path is relative to where the launcher is located. For example, having the path as "mod" will tell
# Mod Engine 2 to look for the directory mod inside the Mod Engine 2 directory with the launcher.
#
# Multiple mods must be separated with commas. For example if you have 3 mods, you will have something like the following:
# mods = [
#    { enabled = true, name = "coolmod", path = "mod1" },
#    { enabled = true, name = "nicemod", path = "mod2" },
#    { enabled = true, name = "sosomod", path = "mod3" }
# ]
# Note that modengine 2 currently has no way to resolve conflicting files including regulation.bin, and thus the mod with the highest priority
# will have the modded file be loaded in the case of conflict. Some support for merging of params and potentially other assets is considered for
# a future release.
mods = [
    # !nr
    # { enabled = true, name = "NR-DUCHESS_MOV_ONLY", path = "mod\\NR\\DUCHESS_MOV_ONLY" },
    # !dmn
    # { enabled = true, name = "DMN_V3_EXP37", path = "mod\\DMN\\DMN_V3_EXP37" },
    { enabled = true, name = "DMN-Vanilla", path = "mod\\DMN\\DMN-Vanilla" },
    # !skin
    # { enabled = true, name = "SKIN-TORRENT", path = "mod\\SKIN\\TORRENT" },
    # !basic
    { enabled = true, name = "basic_fp", path = "mod\\BASIC\\fp" },
    { enabled = true, name = "basic_campur", path = "mod\\BASIC\\campur" },
    # { enabled = true, name = "default", path = "mod" },
]

# When enabled, scylla hide will be injected into the game. This allows for antidebug measures in the game to be bypassed so that you can attach
# debuggers such as Cheat Engine, x64dbg, windbg, etc to the game without as much trouble. If you're not reverse engineering the game, this option
# is probably not for you.
[extension.scylla_hide]
enabled = false